name: Deploy Unykorn to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build with environment variables
        env:
          VITE_API_BASE: ${{ vars.VITE_API_BASE }}
          VITE_BRAND: ${{ vars.VITE_BRAND }}
          VITE_NETWORK_LABEL: ${{ vars.VITE_NETWORK_LABEL }}
          VITE_ENABLE_SIMULATION: ${{ vars.VITE_ENABLE_SIMULATION }}
        run: |
          npm run build
          # SPA fallback for GitHub Pages
          cp dist/index.html dist/404.html

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  backend-deploy:
    name: Deploy Backend (Render)
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Trigger via Render Deploy Hook (preferred)
        if: ${{ secrets.RENDER_DEPLOY_HOOK != '' }}
        run: |
          echo "Triggering Render deploy via Deploy Hook"
          curl -fsS -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"

      - name: Trigger via Render API (fallback)
        if: ${{ secrets.RENDER_DEPLOY_HOOK == '' && secrets.RENDER_API_KEY != '' && secrets.RENDER_SERVICE_ID != '' }}
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          echo "Triggering Render deploy via API for service ${RENDER_SERVICE_ID}"
          curl -fsS -X POST \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Content-Type: application/json" \
            -d '{}' \
            "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys"

      - name: Skip (no Render config found)
        if: ${{ secrets.RENDER_DEPLOY_HOOK == '' && (secrets.RENDER_API_KEY == '' || secrets.RENDER_SERVICE_ID == '') }}
        run: |
          echo "No Render secrets configured. Skipping backend deployment."
